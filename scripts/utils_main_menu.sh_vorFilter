
show_main_menu() {

    local read_cmdb_Y="Y"
    local read_cmdb_N="N"
    local read_only_Y="Y"
    local read_only_N="N"
    local page=1
    local selfile="$rootDir/tmp/appsel.$$"

        
	last_update="**unknown**"
	if [ -f /tmp/miginfo_refresh.log ]; then
		last_update=$(cat /tmp/miginfo_refresh.log | grep "finish" |cut -d "|" -f2)
	fi

while true
do

	cd $rootDir/scripts
	check_ws $rootDir $ws_nr

	if [ "X$run_cluster" == "X" ]; then
		exit
	fi

   function mhead() {	
        clear
	  gum style --foreground=$AC_GREEN --background=$AC_BLACK \
              --align center --width 100 --bold \
          "user: $ws_user - $mail_to Workspace-nr: ${ws_nr}/$ws_status Current selected clusterÂ´: $run_cluster"

	  gum style --foreground=$AC_RED --background=$AC_BLACK \
              --border rounded --margin "1 2" --padding "1 3" \
              --align center --width 100 --bold \
	       "START pre-Migration Infrastructure Readiness test"
    }
    $rootDir/scripts/fetch_cmdb_data.sh appinfos_sel $run_cluster $selfile

    mhead
    select_appinfo2 $run_cluster $read_only_Y $read_cmdb_Y $page
    local max_page=$mig_app_max_page

   echo
   echo
   echo
   menubar="[F]PageFwd,[B]PageBck,[1]RunCpt,[2]RunTest,[3]Results,[4]DispMigConf,[5]DBAToolbox,[6]ClConTest,[7]ZDM,[8]CpatResult,//,"
   menubar="${menubar}[c]SetCl    ,[m]setMail,[n]NFSServ,[l]NFSloop,[a]ApplClAssign,[x]SendCpats,[q]quit"
   hmenu "${menubar}"

	local found=0

	mail_param=""
	if [ "X$mail_to" != "X" ]; then
		mail_param="-m $mail_to"
	fi
        
	cd $rootDir/scripts
	echo
	echo
	case $input in

            SendCpats)
		    cpat_send_zip $rootDir/cpat/results $mail_to
		    ;;


            DispMigConf)
		    mhead
                    mig_app_num="" 
   		    select_appinfo2 $run_cluster $read_only_N $read_cmdb_N $page
                    if [ "X$mig_app_num" !=  "X" ]; then
                            ./zdm_premigration.sh -a $mig_app_num -r $run_cluster -t "000" -x skip
                    fi
                    sleep 2
                    ;;

             ApplClAssign)
		    mhead
                    mig_app_num="" 
   		    select_appinfo2 $run_cluster $read_only_N $read_cmdb_N $page
                    if [ "X$mig_app_num" !=  "X" ]; then
                       change_cluster_assignment "$cluster" "$file" $mig_app_num
                    fi
                 ;;
             c|C)
                     select_appinfo2 $cluster_num $read_only_N $read_cmdb_N $page
                     if [ "X$mig_app_num" !=  "X" ]; then
                         change_cpat_schemas  "$cluster" "$file" $mig_app_num
                     fi
                 ;;
             n|N)
                 change_assign_nfs "$cluster" "$file"
                 set_displaydata
                 ;;
            m|M)
                    fetch_migdata "$(echo $selected_line | cut -d "|" -f5)"
                    set_displaydata
                 ;;

              PageFwd)
                if (( page  < max_page )); then
                    ((page++))
                   #  mhead
                   #  select_appinfo2 $cluster_num $read_only_Y $read_cmdb_N $page
                else
                    echo "Already on last page."
                    sleep 1
                fi
                ;;
            PageBck)
                if (( page > 0 )); then
                    ((page--))
                   #  mhead
                   #  select_appinfo2 $cluster_num $read_only_Y $read_cmdb_N $page
                else
                    echo "Already on first page."
                    sleep 1
                fi
                ;;

	RunCpt)
                clear; mhead;  gchoose "$selfile" $rootDir/tmp/appsel "|" multi
	        run_cpat $rootDir/tmp/appsel
	#	./zdm_mpremig.sh -r $run_cluster -p yes "$mail_param"
		;;
	RunTest)
	 	./zdm_mpremig.sh -r $run_cluster "$mail_param"
		;;
	NFSServ) 
                fetch_nfs "NO" 
		;;
        NFSloop)
                cnt=0
                ./fetch_cmdb_data.sh select_nfs > /dev/null
                while true
                do
                   disp_nfs
                   sleep 15
                done
                ;;
  		
	Results)
		list_jobresults
		;;
	MigToolbox)
		show_cluster_data $run_cluster
		;;
	DBAToolbox)
		./test_adb_nfs.sh adbvn7      
		;;	
	ClConTest)
	        fetch_srchost $run_cluster
	        ;;
	ZDM)
	        fetch_migdata
	        ;;
	CpatResult)
		check_cpat_runs
		;;
	SetCl)

                select_migcluster
		export run_cluster=$mig_cluster_num
		;;
	#xbash)
	#	bash -rcfile ~/.bashrc_batch </dev/tty >/dev/tty 2>/dev/tty
	#	;;
	setMail)
		source ./zdm_setemail.sh select
		;;
	""|q)
	        cleanup	
		;;
	*)
		echo -e "${RED}Invalid selection!${NC}"
		;;
	esac
	input=""
	if [ "X$trace_actions" == "Xtrue" ]; then
		echo "menue; $(date); $callerip; $input" >> $trace_file
        fi
  done
}

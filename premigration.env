#
#    premig env
#

curdir=$(pwd)
export rootDir=$(dirname $curdir)
bnlvl0=$(basename $curdir)
bnlvl1=$(basename $rootDir)

if [ "X$gpid" == "X" ]; then
   gpid=$$
fi


current_user=$(whoami)
if [ -z $rootDir ]; then
	echo "no root Dir set, exit ..."
#	exit 1
fi

if [ "$bnlvl0" == "scripts" ] && [ "$bnlvl1" == "premigration" ] ; then
        export PREMIG_ENV=$(basename $(dirname $rootDir))
	PS1='$(hostname)-$(basename $(dirname "$PWD"))/$(basename "$PWD")_${PREMIG_ENV} \$ '
else
	echo "please start from scripts dir ..."
        exit 1
fi
#=====??=======ORACLE ZDM ================

export criptsDir=$(pwd)
export ORACLE_BASE=${rootDir}/oracle
export ORACLE_HOME=${ORACLE_BASE}/client
export LD_LIBRARY_PATH=$ORACLE_HOME/lib:$LD_LIBRARY_PATH
export PATH=$ORACLE_HOME/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/usr/oci/bin:/mount/sa4zdmfs/zdmconfig/sshc
export TNS_ADMIN=$ORACLE_HOME/network/admin/all_dbs
export TNS_ADMIN_ROOT=$ORACLE_HOME/network/admin
export walletdir=~/.orawallet
export cmdbcon="/@mondbp_mig"

if [ "$cl" == "onprem" ]; then
     export TNS_ADMIN=$ORACLE_HOME/network/admin/all_dbs
fi

alias tnscloud="export TNS_ADMIN=$ORACLE_HOME/network/admin/cloud_dbs"
alias tcl="export TNS_ADMIN=$ORACLE_HOME/network/admin/cloud_dbs"
alias tnsonprem="export TNS_ADMIN=$ORACLE_HOME/network/admin/onprem_dbs"
alias ton="export TNS_ADMIN=$ORACLE_HOME/network/admin/onprem_dbs"
alias vt="vi $TNS_ADMIN/tnsnames.ora"



if [ ! -f ${ORACLE_HOME}/bin/sqlplus ]; then
	echo "no Oracle client installed ... exit "
	exit 2
fi
#--------------------------------------------
# List of specific compartments to process
export COMPARTMENTS_TO_PROCESS=(
"ocid1.compartment.oc1..aaaaaaaaueltojv7bgpmgtvzvwxxdlvsl6cedwbtvwsvwing6clg4o5cuquq"
"ocid1.compartment.oc1..aaaaaaaa7ptvflundl2vqwcl4yucstnls7fx3ctnlw26gfwmyckqzuuxpbza"
"ocid1.compartment.oc1..aaaaaaaarrb6ikdpg7fbhbeqziehqcde4h4dugpmk7hjzfxd3sywrou7hnlq"
"ocid1.compartment.oc1..aaaaaaaa7ybosg2uiitghvyprgy65ecnh2xnksxb4wh6k3je7zwhh52omsla"
)

export EXACLUSTERS_TO_PROCESS=(
"10.127.161.35"
"10.127.161.96"
"10.127.161.210"
"10.127.161.152"
"10.127.163.156"
"10.127.163.227"
)

# farben

#!/usr/bin/env bash

# Hauptfarben (ANSI 0–7) als Variablen
export AC_BLACK=0
export AC_RED=1
export AC_GREEN=2
export AC_YELLOW=3
export AC_BLUE=4
export AC_MAGENTA=5
export AC_CYAN=6
export AC_WHITE=7

# Colors
export EC_BLACK="\033[0;30m"
export EC_RED="\033[0;31m"
export EC_GREEN="\033[0;32m"
export EC_YELLOW="\033[0;33m"
export EC_BLUE="\033[0;34m"
export EC_MAFENTA="\033[0;35m"
export EC_CYAN="\033[0;36m"
export EC_WHITE="\033[0;37m"
export EC_NC="\033[0m"



export ssh_options="-o StrictHostKeyChecking=no -o BatchMode=yes -o ConnectTimeout=2"
export scp_options="-o TCPKeepAlive=yes -o ServerAliveInterval=3 -o ServerAliveCountMax=3"


#--------------------------------------------

export configDir="${rootDir}/configfiles"
export resultDir="${rootDir}/results"
export sqlDir="${rootDir}/sqls"
export dialogDirRoot="${rootDir}/dialog/$gpid"
export tmpDir="${rootDir}/tmp/$gpid"

mkdir -p $tmpDir &>/dev/null
mkdir -p $dialogDirRoot &>/dev/null

for pdir in $configDir $resultDir $sqlDir $dialogDirRoot $tmpDir
do
	if [ ! -d $pdir ]; then
		echo "Directory $pdir missing ... exit"
		exit 3
	fi
done


# ===============================
# Safe defaults + guards for nounset
# Put this near the top of premigration.env
# ===============================

# kleine Helper-Funktion: Default setzen (nur wenn leer/undefiniert)
def() { eval ": \"\${$1:=$2}\""; export "$1"; }

init_vars() {
  # --- Prozess-/Session-Infos ---
  # gruppen-id (robust), fallback auf $$
  if command -v ps >/dev/null 2>&1; then
    _pgid="$(ps -o pgid= $$ 2>/dev/null | awk '{print $1}')"
  fi
  : "${gpid:=${_pgid:-$$}}"; export gpid
  # prompt, nur wenn interaktiv sinnvoll
  : "${PS1:="\u@\h:\w\$ "}"; export PS1

  # --- Basispfade/Struktur ---
  # rootDir: Standard: $HOME/<wsnr>/premigration (wie in deinen Skripten)
  def rootDir "${HOME}/${ws_nr:-newuser}/premigration"
  # scriptsDir relativ zu rootDir
  def scriptsDir "${rootDir}/scripts"
  # temp
  def TMPDIR "/tmp"
  mkdir -p "${TMPDIR}" >/dev/null 2>&1 || true

  # --- DB / Oracle Wallet / SEPS ---
  # ORACLE_HOME optional (bei InstantClient)
  def ORACLE_HOME "/opt/oracle/instantclient"
  # TNS_ADMIN: Wallet/tnsnames
  def TNS_ADMIN  "${ORACLE_HOME}/network/admin"
  # TNS-Alias für CMDB
  def DB_ALIAS   "mondbp_mig"

  # --- Mail/SMTP (für utils_mail_cpats.sh) ---
  def MAIL_FROM  "premig@basf.com"
  def SMTP_URL   "smtp://smtpout.basf.net:25"

  # --- UI/Colors (AC_* kommen ggf. schon von dir; sichere Defaults) ---
  def AC_BLACK  "0"
  def AC_RED    "1"
  def AC_GREEN  "2"
  def AC_YELLOW "3"
  def AC_BLUE   "4"
  def AC_PURPLE "5"
  def AC_CYAN   "6"
  def AC_WHITE  "7"

  # ANSI (falls genutzt)
  def EC_RESET   "\033[0m"
  def EC_RED     "\033[0;31m"
  def EC_GREEN   "\033[0;32m"
  def EC_YELLOW  "\033[1;33m"
  def EC_CYAN    "\033[0;36m"
  def EC_MAGENTA "\033[0;35m"   # (Fix für früheren Tippfehler)

  # --- Login/Menu Übergabeparameter robust vorbereiten ---
  # (werden beim Start von premig_menu.sh übergeben – hier nur nounset-sicher machen)
  def ws_user   ""
  def mail_to   ""
  def ws_nr     ""
  def current_user "$(whoami)"

  # --- Menü-/Gum-Defaults (für utils_gum.sh / CSV-Menüs etc.) ---
  def HEADER_FLAG    "--header=on"
  def HEADER_BG      "black"
  def HEADER_FG      "yellow"
  def SELECTION_FLAG "--selection=single"
  def JOIN_FLAG      "--join=,"
  def HOTKEY_COL     "0"
  def DELIM          ","
  def READ_ONLY      "false"
  def START_AT_PAGE  "1"

  # --- Netzwerk-/Check-Defaults (häufig in deinen Skripten gesehen) ---
  def TIMEOUT_SECS   "3"
  def PING_COUNT     "1"
  def NFS_VERSION    "4"       # kann je Check überschrieben werden
  def DBMP_NFS_IP    ""        # wird je App/DB befüllt
  def src_tns        ""        # Source DB TNS alias
  def src_connect    ""        # z.B. "/@<alias>" oder "user/pass@tns"

  # --- Mail-Funktionen (utils_mail_cpats.sh) ---
  def subject        ""
  def body           ""
  def attachment     ""

  # --- Pfade für Ergebnisse/Artefakte ---
  def RESULT_DIR     "${rootDir}/results"
  def DIALOG_DIR     "${rootDir}/dialog"
  def CONFIG_DIR     "${rootDir}/configfiles"
  mkdir -p "${RESULT_DIR}" "${DIALOG_DIR}" "${CONFIG_DIR}" >/dev/null 2>&1 || true

  # --- Sicherstellen: sqlplus vorhanden (nur Warnung, kein harter Exit hier) ---
  if [[ ! -x "${ORACLE_HOME}/sqlplus" && ! -x "${ORACLE_HOME}/bin/sqlplus" ]]; then
    # Manche Distros haben sqlplus in $ORACLE_HOME/bin
    if [[ -x "${ORACLE_HOME}/bin/sqlplus" ]]; then
      export PATH="${ORACLE_HOME}/bin:${PATH}"
    fi
  else
    # in PATH aufnehmen, wenn nötig
    case ":$PATH:" in
      *":${ORACLE_HOME}:"*|*":${ORACLE_HOME}/bin:"*) : ;;
      *) export PATH="${ORACLE_HOME}/bin:${ORACLE_HOME}:${PATH}" ;;
    esac
  fi

  # --- Sanity: TNS_ADMIN existiert? (nur Hinweis) ---
  if [[ ! -d "${TNS_ADMIN}" ]]; then
    echo "WARN: TNS_ADMIN='${TNS_ADMIN}' existiert nicht. Wallet/tnsnames prüfen." >&2
  fi
}

# >> init einmal beim Laden der ENV ausführen
init_vars
	




